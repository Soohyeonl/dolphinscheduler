extend type Query {
    # Tenant Query
    queryTenantlistPaging(loginUser: InputUser!, searchVal: String, pageNo: Int!,
        pageSize: Int!): TenantPageInfoResultType

    queryTenantlist(loginUser: InputUser!): TenantListResultType

    verifyTenantCode(loginUser: InputUser!, tenantCode: String!): NormalResultType
}

extend type Mutation {
    # Tenant Mutation
    createTenant(loginUser: InputUser!, tenantCode: String!,
        queueId: Int!, description: String): NormalResultType

    updateTenant(loginUser: InputUser!, id: Int!, tenantCode: String!,
        queueId: Int!, description: String): NormalResultType

    deleteTenantById(loginUser: InputUser!, id: Int!): NormalResultType
}

type Tenant {
    id: Int
    tenantCode: String
    description: String
    queueId: Int
    queueName: String
    queue: String
    createTime: String
    updateTime: String
}

type TenantPageInfo {
    totalList: [Tenant]
    total: Int
    currentPage: Int
    totalPage: Int
}

type TenantPageInfoResultType {
    code: Int
    msg: String
    data: TenantPageInfo
    success: Boolean
    failed: Boolean
}

type TenantListResultType {
    code: Int
    msg: String
    data: [Tenant]
    success: Boolean
    failed: Boolean
}
